//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace XinjingdailyBot.Generator {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Templates {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Templates() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("XinjingdailyBot.Generator.Templates", typeof(Templates).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 services.Add{0}&lt;{1}&gt;(); 的本地化字符串。
        /// </summary>
        internal static string AppServiceContent1 {
            get {
                return ResourceManager.GetString("AppServiceContent1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 services.Add{0}&lt;{1}, {2}&gt;(); 的本地化字符串。
        /// </summary>
        internal static string AppServiceContent2 {
            get {
                return ResourceManager.GetString("AppServiceContent2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 }
        ///} 的本地化字符串。
        /// </summary>
        internal static string AppServiceFooter {
            get {
                return ResourceManager.GetString("AppServiceFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using Microsoft.Extensions.DependencyInjection;
        ///
        ///namespace XinjingdailyBot.WebAPI.Extensions;
        ///
        ////// &lt;summary&gt;
        ////// 动态注册服务扩展
        ////// &lt;/summary&gt;
        ///public static class GeneratedAppServiceExtensions
        ///{
        ///    private static readonly NLog.Logger _logger = NLog.LogManager.GetCurrentClassLogger();
        ///
        ///    /// &lt;summary&gt;
        ///    /// 注册引用程序域中所有有AppService标记的类的服务
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;services&quot;&gt;&lt;/param&gt;
        ///    public static void AddAppServiceGenerated(this IServiceCollection services)
        ///    { 的本地化字符串。
        /// </summary>
        internal static string AppServiceHeader {
            get {
                return ResourceManager.GetString("AppServiceHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 try
        ///{{
        ///    const string group = &quot;DEFAULT&quot;;
        ///    var jobKey = new JobKey(&quot;{0}&quot;, group);
        ///    var tiggerKey = new TriggerKey(&quot;{0}-Tigger&quot;, group);
        ///    var schedule = cron.GetValueOrDefault(&quot;{0}&quot;, &quot;{1}&quot;);
        ///
        ///    qz.AddJob&lt;{2}&gt;(jobKey, opts =&gt; opts.WithIdentity(jobKey));
        ///    qz.AddTrigger(opts =&gt; opts
        ///        .ForJob(jobKey)
        ///        .WithIdentity(tiggerKey)
        ///        .WithCronSchedule(&quot;{1}&quot;)
        ///    );
        ///
        ///    _logger.Debug(&quot;{1} - {0} 注册成功&quot;);
        ///}}
        ///catch (Exception ex)
        ///{{
        ///    _logger.Error(ex, &quot;{1} - {0} 注册失败 [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string JobContent {
            get {
                return ResourceManager.GetString("JobContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 });
        ///
        ///        services.AddQuartzServer(op =&gt; {
        ///            op.StartDelay = TimeSpan.FromSeconds(10);
        ///            op.AwaitApplicationStarted = true;
        ///            op.WaitForJobsToComplete = true;
        ///        });
        ///    }
        ///} 的本地化字符串。
        /// </summary>
        internal static string JobFooter {
            get {
                return ResourceManager.GetString("JobFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using Quartz;
        ///using Quartz.AspNetCore;
        ///using XinjingdailyBot.Infrastructure;
        ///
        ///namespace XinjingdailyBot.WebAPI.Extensions;
        ///
        ////// &lt;summary&gt;
        ////// 定时任务扩展
        ////// &lt;/summary&gt;
        ///public static class GeneratedTaskExtensions
        ///{    
        ///    private static readonly NLog.Logger _logger = NLog.LogManager.GetCurrentClassLogger();
        ///
        ///    /// &lt;summary&gt;
        ///    /// 注册定时任务
        ///    /// &lt;/summary&gt;
        ///    /// &lt;param name=&quot;services&quot;&gt;&lt;/param&gt;
        ///    /// &lt;param name=&quot;configuration&quot;&gt;&lt;/param&gt;
        ///    public static void AddQuartzSetupGenerated(this [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string JobHeader {
            get {
                return ResourceManager.GetString("JobHeader", resourceCulture);
            }
        }
    }
}
